version: "3.9"

services:
  web:
    depends_on:
      - postgres_db
      - redis_db
    build: .
    env_file:
      - .env
    image: django-app:latest
    container_name: django-web
    ports:
      - "8000:8000"
    command: sh -c "chmod +x /app/migrate.sh && /app/migrate.sh && /app/entrypoint.sh"
    environment:
      - PORT=8000
      - PYTHONUNBUFFERED=1
      # Add explicit environment variables to ensure they're passed
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    volumes:
      - static_volume:/app/staticfiles
    restart: unless-stopped

  postgres_db:
      image: postgres:13
      env_file:
        - .env
      environment:
        - POSTGRES_PORT=5433
      ports:
        - "5432:5432"  # Change to standard port
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -p 5433" ]
        interval: 5s  # ← Faster checks
        timeout: 10s
        retries: 10   # ← More retries
        start_period: 30s  # ← Give it time to start

  redis_db:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --port 6380  # Explicitly set port
    ports:
      - "6380:6380"  # Host:Container port mapping
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "6380", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  static_volume:

